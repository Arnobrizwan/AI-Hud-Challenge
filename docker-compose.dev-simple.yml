# docker-compose.dev-simple.yml - Simplified development stack
version: '3.8'

services:
  # ==================== INFRASTRUCTURE ONLY ====================
  redis:
    image: redis:7-alpine
    ports: ["6379:6379"]
    volumes: ["redis_data:/data"]
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 3

  postgres:
    image: pgvector/pgvector:pg15
    environment:
      POSTGRES_DB: newshub
      POSTGRES_USER: newshub
      POSTGRES_PASSWORD: dev_password
    ports: ["5432:5432"]
    volumes: 
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U newshub"]
      interval: 5s
      timeout: 3s
      retries: 5

  # ==================== CORE SERVICES (MINIMAL SET) ====================
  foundations-guards:
    build: 
      context: ./safety-service
      dockerfile: Dockerfile.dev
    ports: ["8001:8000"]
    environment:
      - REDIS_URL=redis://redis:6379
      - DATABASE_URL=postgresql://newshub:dev_password@postgres:5432/newshub
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
    volumes: ["./safety-service:/app"]

  ingestion-normalization:
    build: 
      context: ./ingestion-service
      dockerfile: Dockerfile.dev
    ports: ["8002:8000"]
    environment:
      - REDIS_URL=redis://redis:6379
      - DATABASE_URL=postgresql://newshub:dev_password@postgres:5432/newshub
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
      foundations-guards:
        condition: service_started
    volumes: ["./ingestion-service:/app"]

  content-extraction:
    build:
      context: ./content-extraction-service
      dockerfile: Dockerfile.dev
    ports: ["8003:8000"]
    environment:
      - REDIS_URL=redis://redis:6379
      - DATABASE_URL=postgresql://newshub:dev_password@postgres:5432/newshub
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
    volumes: ["./content-extraction-service:/app"]

  # ==================== API GATEWAY ====================
  api-gateway:
    build:
      context: ./src
      dockerfile: Dockerfile.dev
    ports: ["8000:8000"]
    environment:
      - REDIS_URL=redis://redis:6379
    depends_on:
      - foundations-guards
      - ingestion-normalization
      - content-extraction
    volumes: ["./src:/app"]

volumes:
  redis_data:
  postgres_data:

networks:
  default:
    name: news-hub-network
