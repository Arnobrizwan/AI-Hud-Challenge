name: Cleanup

on:
  schedule:
    - cron: '0 2 * * 0' # Weekly on Sunday at 2 AM
  workflow_dispatch:

jobs:
  cleanup-artifacts:
    name: Cleanup Artifacts
    runs-on: ubuntu-latest
    steps:
    - name: Delete old artifacts
      uses: actions/github-script@v7
      with:
        script: |
          const artifacts = await github.rest.actions.listArtifactsForRepo({
            owner: context.repo.owner,
            repo: context.repo.repo,
            per_page: 100
          });
          
          const cutoffDate = new Date();
          cutoffDate.setDate(cutoffDate.getDate() - 30); // Keep artifacts for 30 days
          
          for (const artifact of artifacts.data.artifacts) {
            if (new Date(artifact.created_at) < cutoffDate) {
              await github.rest.actions.deleteArtifact({
                owner: context.repo.owner,
                repo: context.repo.repo,
                artifact_id: artifact.id
              });
              console.log(`Deleted artifact: ${artifact.name}`);
            }
          }

  cleanup-runs:
    name: Cleanup Workflow Runs
    runs-on: ubuntu-latest
    steps:
    - name: Delete old workflow runs
      uses: actions/github-script@v7
      with:
        script: |
          const runs = await github.rest.actions.listWorkflowRuns({
            owner: context.repo.owner,
            repo: context.repo.repo,
            workflow_id: 'cleanup.yml',
            per_page: 100
          });
          
          const cutoffDate = new Date();
          cutoffDate.setDate(cutoffDate.getDate() - 90); // Keep runs for 90 days
          
          for (const run of runs.data.workflow_runs) {
            if (new Date(run.created_at) < cutoffDate) {
              await github.rest.actions.deleteWorkflowRun({
                owner: context.repo.owner,
                repo: context.repo.repo,
                run_id: run.id
              });
              console.log(`Deleted workflow run: ${run.id}`);
            }
          }

  cleanup-images:
    name: Cleanup Docker Images
    runs-on: ubuntu-latest
    steps:
    - name: Delete old Docker images
      uses: actions/github-script@v7
      with:
        script: |
          const packages = await github.rest.packages.listPackagesForOrganization({
            org: context.repo.owner,
            package_type: 'container',
            per_page: 100
          });
          
          const cutoffDate = new Date();
          cutoffDate.setDate(cutoffDate.getDate() - 30); // Keep images for 30 days
          
          for (const pkg of packages.data) {
            if (new Date(pkg.created_at) < cutoffDate) {
              await github.rest.packages.deletePackageForOrg({
                org: context.repo.owner,
                package_type: 'container',
                package_name: pkg.name
              });
              console.log(`Deleted package: ${pkg.name}`);
            }
          }
