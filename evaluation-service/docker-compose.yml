version: '3.8'

services:
  evaluation-service:
    build: .
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/evaluation_db
      - REDIS_URL=redis://redis:6379
      - MLFLOW_TRACKING_URI=http://mlflow:5000
      - MLFLOW_REGISTRY_URI=http://mlflow:5000
      - BIGQUERY_PROJECT_ID=your-project-id
      - BIGQUERY_DATASET_ID=evaluation_dataset
      - VERTEX_AI_PROJECT_ID=your-project-id
      - VERTEX_AI_LOCATION=us-central1
      - SECRET_KEY=your-secret-key
    depends_on:
      - postgres
      - redis
      - mlflow
    volumes:
      - ./logs:/app/logs
    networks:
      - evaluation-network

  postgres:
    image: postgres:15
    environment:
      - POSTGRES_DB=evaluation_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - evaluation-network

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - evaluation-network

  mlflow:
    image: python:3.11-slim
    working_dir: /app
    command: >
      sh -c "pip install mlflow psycopg2-binary &&
             mlflow server --backend-store-uri postgresql://postgres:password@postgres:5432/mlflow_db --default-artifact-root /mlflow/artifacts --host 0.0.0.0"
    ports:
      - "5000:5000"
    environment:
      - MLFLOW_BACKEND_STORE_URI=postgresql://postgres:password@postgres:5432/mlflow_db
      - MLFLOW_DEFAULT_ARTIFACT_ROOT=/mlflow/artifacts
    volumes:
      - mlflow_data:/mlflow
    depends_on:
      - postgres
    networks:
      - evaluation-network

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - evaluation-network

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus
    networks:
      - evaluation-network

volumes:
  postgres_data:
  redis_data:
  mlflow_data:
  prometheus_data:
  grafana_data:

networks:
  evaluation-network:
    driver: bridge
