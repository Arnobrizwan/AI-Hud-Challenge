version: '3.8'

services:
  storage-service:
    build: .
    ports:
      - "8000:8000"
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DATABASE=storage_db
      - POSTGRES_USERNAME=postgres
      - POSTGRES_PASSWORD=password
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - ELASTICSEARCH_HOSTS=elasticsearch:9200
      - TIMESCALE_HOST=timescale
      - TIMESCALE_PORT=5432
      - TIMESCALE_DATABASE=timescale_db
      - TIMESCALE_USERNAME=timescale
      - TIMESCALE_PASSWORD=password
    depends_on:
      - postgres
      - redis
      - elasticsearch
      - timescale
    volumes:
      - ./logs:/app/logs
    restart: unless-stopped
    networks:
      - storage-network

  postgres:
    image: pgvector/pgvector:pg15
    environment:
      - POSTGRES_DB=storage_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: unless-stopped
    networks:
      - storage-network

  timescale:
    image: timescale/timescaledb:latest-pg15
    environment:
      - POSTGRES_DB=timescale_db
      - POSTGRES_USER=timescale
      - POSTGRES_PASSWORD=password
    ports:
      - "5433:5432"
    volumes:
      - timescale_data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - storage-network

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ./redis.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf
    restart: unless-stopped
    networks:
      - storage-network

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    restart: unless-stopped
    networks:
      - storage-network

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    networks:
      - storage-network

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
    restart: unless-stopped
    networks:
      - storage-network

volumes:
  postgres_data:
  timescale_data:
  redis_data:
  elasticsearch_data:
  prometheus_data:
  grafana_data:

networks:
  storage-network:
    driver: bridge
